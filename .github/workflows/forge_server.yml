name: Forge Minecraft Server

on:
  workflow_dispatch:
    inputs:
      server_id:
        description: 'Server ID'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Create server directory
        run: mkdir -p server/${{ inputs.server_id }}

      - name: Install cloudflared
        run: |
          curl -L --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared.deb

      - name: Setup Forge Server
        run: |
          cd server/${{ inputs.server_id }}
          if [ ! -f "server.jar" ]; then
            curl -o forge-installer.jar "https://maven.minecraftforge.net/net/minecraftforge/forge/1.21.4-49.0.11/forge-1.21.4-49.0.11-installer.jar"
            echo "eula=true" > eula.txt
            java -jar forge-installer.jar --installServer
            FORGE_JAR=$(find . -name "forge-1.21.4-49.0.11*.jar" -type f)
            if [ ! -z "$FORGE_JAR" ]; then
              ln -sf "$FORGE_JAR" server.jar
            else
              echo "Error: Forge JAR not found after installation"
              exit 1
            fi
          fi

      - name: Start Cloudflared tunnel
        run: |
          cd server/${{ inputs.server_id }}
          cloudflared tunnel --url tcp://localhost:25565 > tunnel.log 2>&1 &
          sleep 10
          TUNNEL_URL=$(grep -o 'tcp://.*\.trycloudflare.com' tunnel.log || echo "")
          if [ ! -z "$TUNNEL_URL" ]; then
            echo "{\"address\":\"$TUNNEL_URL\",\"running\":true,\"timestamp\":$(date +%s)}" > status.json
          fi
          cat tunnel.log

      - name: Start Forge Server
        run: |
          cd server/${{ inputs.server_id }}
          java -jar server.jar nogui

      - name: Commit generated files
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add server/${{ inputs.server_id }}
          git commit -m "Update server files for ${{ inputs.server_id }}" || echo "No changes"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}