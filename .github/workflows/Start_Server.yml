name: Launch Minecraft Server

on:
  workflow_dispatch:
    inputs:
      memory:
        description: 'Memory allocation for Java (e.g. 1024M, 2G)'
        default: '1024M'
        required: false
      backup_interval:
        description: 'Backup interval in hours'
        default: '6'
        required: false
      max_runtime:
        description: 'Maximum runtime in minutes before restart'
        default: '359'
        required: false
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
      
jobs:
  start-minecraft-server:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # GitHub's 6 hour limit
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'
          
      - name: Verify Java installation
        run: java -version
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyngrok zipfile36 datetime

      - name: Download previous world backup if exists
        uses: actions/download-artifact@v4
        with:
          name: minecraft-backup
          path: .
        continue-on-error: true
        
      - name: Extract backup if exists
        run: |
          if ls backup_*.zip 1> /dev/null 2>&1; then
            echo "Found backup file. Extracting..."
            latest_backup=$(ls -t backup_*.zip | head -1)
            unzip -o "$latest_backup"
            echo "Backup extracted successfully."
          else
            echo "No backup file found. Starting with fresh world."
          fi

      - name: Download Minecraft Server if needed
        run: |
          if [ ! -f "server.jar" ]; then
            echo "Downloading Minecraft server jar..."
            # Updated to the latest version 1.20.4 server jar
            curl -o server.jar https://piston-data.mojang.com/v1/objects/8dd1a28015f51b1803213892b50b7b4fc76e594d/server.jar
          fi
          
      - name: Accept EULA
        run: |
          echo "eula=true" > eula.txt
          
      - name: Launch Minecraft Server
        run: python Start_Server.py
        env:
          JAVA_ARGS: "-Xmx${{ github.event.inputs.memory || '1024M' }} -Xms${{ github.event.inputs.memory || '1024M' }}"
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
          MINECRAFT_JAR: "server.jar"
          MINECRAFT_PORT: "25565"
          BACKUP_INTERVAL_HOURS: "${{ github.event.inputs.backup_interval || '6' }}"
          MAX_RUNTIME_MINUTES: "${{ github.event.inputs.max_runtime || '340' }}"
          
      - name: Upload world backup
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: minecraft-backup
          path: backup_*.zip
          retention-days: 1
          
      - name: Trigger next run
        if: ${{ !github.event.schedule }}  # Don't trigger if already running on schedule
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: restart-minecraft-server